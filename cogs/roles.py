# -*- coding: utf-8 -*-
"""cogs/roles.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Y4dxDNP37UQ2UJKFvchhhwGJCTQialv
"""

# cogs/roles.py

import discord
from discord.ext import commands
from config import COLOR_ROLES, LITTLE_AGE_ROLES, GENDER_ROLES, REAL_AGE_ROLES, OTHER_ROLES
import asyncio

class ReactionRoleButton(discord.ui.Button):
    def __init__(self, role_name: str, emoji: str):
        super().__init__(label=role_name, style=discord.ButtonStyle.secondary, emoji=emoji, custom_id=f"reaction_role_{role_name}")
        self.role_name = role_name

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=True)

        guild = interaction.guild
        member = interaction.user
        role = discord.utils.get(guild.roles, name=self.role_name)

        if role is None:
            await interaction.followup.send(f"‚ùå Role '{self.role_name}' not found. Please ensure the role exists and is spelled correctly.", ephemeral=True)
            return

        if role in member.roles:
            await member.remove_roles(role)
            await interaction.followup.send(f"‚úÖ You have removed the **{self.role_name}** role.", ephemeral=True)
        else:
            await member.add_roles(role)
            await interaction.followup.send(f"‚úÖ You have been given the **{self.role_name}** role.", ephemeral=True)

class ColorRoleView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        for role_name, emoji in COLOR_ROLES.items():
            self.add_item(ReactionRoleButton(role_name, emoji))

class LittleAgeRoleView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        for role_name, emoji in LITTLE_AGE_ROLES.items():
            self.add_item(ReactionRoleButton(role_name, emoji))

class GenderRoleView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        for role_name, emoji in GENDER_ROLES.items():
            self.add_item(ReactionRoleButton(role_name, emoji))

class RealAgeRoleView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        for role_name, emoji in REAL_AGE_ROLES.items():
            self.add_item(ReactionRoleButton(role_name, emoji))

class OtherRoleView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        for role_name, emoji in OTHER_ROLES.items():
            self.add_item(ReactionRoleButton(role_name, emoji))

class RolesCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.hybrid_command(name='giverole')
    @commands.is_owner()
    async def giverole(self, ctx, user: discord.Member, *, role: discord.Role):
        await user.add_roles(role)
        await ctx.send(f'{user.mention} has been given the role {role.name}.')

    @commands.hybrid_command(name="reactionroles", description="Send messages for categorized reaction roles")
    @commands.is_owner()
    async def reactionroles(self, ctx):
        await self.delete_command_message(ctx)

        color_embed = discord.Embed(
            title="üé® Color Roles",
            description="Pick your favorite color!",
            color=discord.Color.red()
        )
        await ctx.send(embed=color_embed, view=ColorRoleView())

        little_age_embed = discord.Embed(
            title="üë∂ Little Age Roles",
            description="Select your little age range.",
            color=discord.Color.blue()
        )
        await ctx.send(embed=little_age_embed, view=LittleAgeRoleView())

        gender_embed = discord.Embed(
            title="üöª Gender Roles",
            description="Choose your gender identity.",
            color=discord.Color.green()
        )
        await ctx.send(embed=gender_embed, view=GenderRoleView())

        real_age_embed = discord.Embed(
            title="üéÇ Real Age Roles",
            description="Select your real age range.",
            color=discord.Color.orange()
        )
        await ctx.send(embed=real_age_embed, view=RealAgeRoleView())

        other_embed = discord.Embed(
            title="‚ú® Other Roles",
            description="Miscellaneous roles you might be interested in.",
            color=discord.Color.purple()
        )
        await ctx.send(embed=other_embed, view=OtherRoleView())

        log_channel = self.bot.get_channel(LOG_CHANNEL_ID)
        if log_channel:
            await log_channel.send("Categorized reaction roles messages sent!")
        else:
            await ctx.send("Categorized reaction roles messages sent!", ephemeral=True)

    async def delete_command_message(self, ctx):
        try:
            await ctx.message.delete()
        except discord.Forbidden:
            pass # Ignore if bot can't delete the message

async def setup(bot):
    await bot.add_cog(RolesCog(bot))